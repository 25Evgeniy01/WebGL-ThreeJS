{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/code/initScene/index.js","webpack:///./client/code/interface/interface.js","webpack:///./client/code/actions/keyConf.js","webpack:///./client/code/gameObj/garage.js","webpack:///./client/code/gameObj/unit.js","webpack:///./client/code/gameObj/car.js","webpack:///./client/code/interface/audio.js","webpack:///./client/code/actions/triggerEnter.js","webpack:///./client/code/actions/animationUnit.js","webpack:///./client/code/actions/animationCar.js","webpack:///./client/code/actions/animation.js","webpack:///./client/code/gameObj/tree.js","webpack:///./client/code/index.js","webpack:///./client/code/serverSide/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","initScene","InitScene","_classCallCheck","this","aspect","window","innerWidth","innerHeight","canvas","document","getElementById","setAttribute","scene","THREE","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","loadComposer","composerActive","composer","EffectComposer","renderPass","RenderPass","addPass","sepiaPass","ShaderPass","SepiaShader","glitchPass","GlitchPass","myEffect","uniforms","tDiffuse","amount","vertexShader","join","fragmentShader","customPass","renderToScreen","_this","addEventListener","simulate","undefined","fog","FogExp2","add","position","set","rotation","x","Math","PI","setSize","setClearColor","color","shadowMap","enabled","shadowMapSoft","THREEx","WindowResize","light","DirectionalLight","castShadow","shadow","left","top","right","bottom","near","far","bias","mapSize","width","height","render","_animationCar","_garage","_initScene","objects","raycaster","Raycaster","mouse","Vector2","interface1","$","ready","click","slideToggle","toggleClass","_this2","e","clickPlayer","event","clientX","domElement","clientWidth","y","clientY","clientHeight","setFromCamera","intersects","intersectObjects","length","alert","text","wheel","mass","toString","is","garage","lightGarage","visible","helper","keyboard","keyboardList","keyListener","KeyListener","bool","keyCode","_interface","geometry","BoxGeometry","material1","MeshPhongMaterial","transparent","opacity","depthTest","cube","Mesh","receiveShadow","push","cube2","scale","SpotLight","CameraHelper","unit","sprUnit","material","map","sprMove180","sprMove270","sprDeath","TextureLoader","load","loadSprite","sprMaterial","SpriteMaterial","Sprite","car","spriteSmoke","sprCar","sprWheel","sprSmoke","audio","listener","AudioListener","sound","Audio","AudioLoader","buffer","setBuffer","setLoop","setVolume","_car","_unit","triggerEnter","trigEnter","obj1","obj2","size1","size2","arguments","movePos","_keyConf","_triggerEnter","_audio","_tree","keyEnter","animationUnit","AnimationUnit","currMoveSpr","currDeathSpr","play","enterUnitCar","tree","_animationUnit","_serverSide","radius","axleRadius","deltaRot","dragCoff","keyboard37","keyboard39","blind","reloadGame","animationCar","AnimationCar","currSprSmoke","mult1","pow","children","startPosition","setKeyboardList","setKeyEnter","style","paddingTop","paddingLeft","fontSize","servSide","ws","send","JSON","stringify","commandName","setTimeout","endReloadGame","enterGarageCar","moveCar","mainAnim","MainAnim","requestAnimationFrame","animate","posTree","z","Tree","_animation","init","InitClass","loadScene","loadRender","loadLight","loadCar","loadUnit","loadGarage","slider","btnListener","eventListener","webSocket","keyDown","keyUp","onload","initialize","WebSocket","onopen","console","log"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,iVC0CIC,EAAY,eAzHZ,SAAAC,iGAAcC,CAAAC,KAAAF,GAEV,IAAoBG,EAASC,OAAOC,WAAaD,OAAOE,YAEpDC,EAASC,SAASC,eAAe,UACrCF,EAAOG,aAAa,QAASN,OAAOC,YACpCE,EAAOG,aAAa,SAAUN,OAAOE,aAGrCJ,KAAKS,MAAQ,IAAIC,MAAMC,MAGvBX,KAAKY,OAAU,IAAIF,MAAMG,kBAVT,GAUsCZ,EAVsB,EAAS,KAarFD,KAAKc,SAAW,IAAIJ,MAAMK,eAAeV,OAAQA,IAEjDL,KAAKgB,gEAKLhB,KAAKiB,gBAAiB,EACtBjB,KAAKkB,SAAW,IAAIR,MAAMS,eAAenB,KAAKc,UAE9C,IAAIM,EAAa,IAAIV,MAAMW,WAAWrB,KAAKS,MAAOT,KAAKY,QACvDZ,KAAKkB,SAASI,QAAQF,GAEtB,IAAIG,EAAY,IAAIb,MAAMc,WAAWd,MAAMe,aAC3CzB,KAAKkB,SAASI,QAAQC,GAEtB,IAAIG,EAAa,IAAIhB,MAAMiB,WAAW,GACtC3B,KAAKkB,SAASI,QAAQI,GAItB,IAAIE,GACAC,UACIC,UAAchD,MAAO,MACrBiD,QAAcjD,MAAO,IAEzBkD,cACI,oBACA,gBACA,YACA,4EACA,KACFC,KAAM,MACRC,gBACI,wBACA,8BACA,oBACA,gBACA,2CACA,sBACA,uBACA,uBACA,iBACA,8CACA,KACFD,KAAM,OAGRE,EAAa,IAAIzB,MAAMc,WAAWI,GACtCO,EAAWC,gBAAiB,EAC5BpC,KAAKkB,SAASI,QAAQa,uCAGd,IAAAE,EAAArC,KACRA,KAAKS,MAAM6B,iBACP,SACC,WACGD,EAAK5B,MAAM8B,cAASC,EAAW,KAIvCxC,KAAKS,MAAMgC,IAAM,IAAI/B,MAAMgC,QAAQ,QAAU,MAE7C1C,KAAKS,MAAMkC,IAAI3C,KAAKY,QAEpBZ,KAAKY,OAAOgC,SAASC,IAAI,EAAG,GAAI,IAEhC7C,KAAKY,OAAOkC,SAASC,GAAKC,KAAKC,GAAK,yCAIpCjD,KAAKc,SAASoC,QAAQhD,OAAOC,WAAYD,OAAOE,aAEhDJ,KAAKc,SAASqC,cAAcnD,KAAKS,MAAMgC,IAAIW,OAC3CpD,KAAKc,SAASuC,UAAUC,SAAU,EAClCtD,KAAKc,SAASyC,eAAgB,EAC9BC,OAAOC,aAAazD,KAAKc,SAAUd,KAAKY,4CAIxC,IAAI8C,EAAQ,IAAIhD,MAAMiD,iBAAiB,UACvCD,EAAMd,SAASC,IAAI,GAAI,IAAK,IAG5Ba,EAAME,YAAa,EACnBF,EAAMG,OAAOjD,OAAOkD,MAAQ,GAC5BJ,EAAMG,OAAOjD,OAAOmD,KAAO,GAC3BL,EAAMG,OAAOjD,OAAOoD,MAAQ,GAC5BN,EAAMG,OAAOjD,OAAOqD,OAAS,GAC7BP,EAAMG,OAAOjD,OAAOsD,KAAO,GAC3BR,EAAMG,OAAOjD,OAAOuD,IAAM,IAC1BT,EAAMG,OAAOO,MAAQ,KACrBV,EAAMG,OAAOQ,QAAQC,MAAQZ,EAAMG,OAAOQ,QAAQE,OAAS,KAE3DvE,KAAKS,MAAMkC,IAAIe,oCAKX1D,KAAKc,UACLd,KAAKc,SAAS0D,OAAOxE,KAAKS,MAAOT,KAAKY,oBAS9Cf,kXC/HJ4E,EAAAhH,EAAA,GACAiH,EAAAjH,EAAA,GACAkH,EAAAlH,EAAA,GAEA,IAAImH,KACAC,EAAY,IAAInE,MAAMoE,UACtBC,EAAQ,IAAIrE,MAAMsE,QAyElBC,EAAa,6KAtEJ,IAAA5C,EAAArC,KACLkF,EAAE5E,UAAU6E,MAAM,WAEdD,EAAE,aAAaE,MAAM,WAEc,OAD/BF,EAAE,UAAUG,YAAY,QACxBH,EAAE7C,GAAMiD,YAAY,WAAkB,8CAMlC,IAAAC,EAAAvF,KACZM,SAASgC,iBAAiB,QAAS,SAACkD,GAAOD,EAAKE,YAAYD,KAAK,uCAGzDA,GACRT,EAAMhC,EAAM2C,MAAMC,QAAU9F,YAAUiB,SAAS8E,WAAWC,YAAgB,EAAI,EAC9Ed,EAAMe,GAAQJ,MAAMK,QAAUlG,YAAUiB,SAAS8E,WAAWI,aAAiB,EAAI,EAEjFnB,EAAUoB,cAAelB,EAAOlF,YAAUe,QAC1C,IAAIsF,EAAarB,EAAUsB,iBAAiBvB,GAC5C,GAAIsB,EAAWE,OAAS,EACpB,OAAQF,EAAW,GAAG3G,OAAOnB,MACzB,IAAM,SACFiI,MAAM,WACN,MACJ,IAAM,MACFA,MAAM,kBACN,MACJ,IAAM,OACFA,MAAM,QACN,MACJ,IAAM,SACFA,MAAM,wEAOlBnB,EAAE5E,UAAU6E,MACR,WACID,EAAE,eAAeoB,KAAMC,QAAMC,KAAMC,YACnCvB,EAAE,YAAYE,MAAM,WACZmB,QAAMC,KAAO,MACbD,QAAMC,MAAQ,IACdtB,EAAE,eAAeoB,KAAMC,QAAMC,KAAMC,eAI3CvB,EAAE,UAAUE,MAAM,WACdmB,QAAMC,MAAQ,IACdtB,EAAE,eAAeoB,KAAMC,QAAMC,KAAMC,cAGvCvB,EAAE,gBAAgBE,MAAM,WACfF,EAAElF,MAAM0G,GAAG,aAIZC,SAAOC,YAAYC,SAAU,EAC7BF,SAAOG,OAAOD,SAAU,IAJxBF,SAAOC,YAAYC,SAAU,EAC7BF,SAAOG,OAAOD,SAAU,mBAe5C5B,eACAL,kVCnFJ,IAAImC,KACAC,GAAe,EAsBfC,EAAc,eAnBd,SAAAC,iGAAenH,CAAAC,KAAAkH,qDAICC,GACZH,EAAeG,kCAGXzB,GACAsB,IAAcD,EAASrB,EAAM0B,UAAW,iCAG1C1B,GACEsB,IAAcD,EAASrB,EAAM0B,UAAW,eAShDL,aACAE,sWC3BJtC,EAAAlH,EAAA,GACA4J,EAAA5J,EAAA,OAyCIkJ,EAAS,iLAnCL,IAAIW,EAAW,IAAI5G,MAAM6G,YAAa,EAAG,EAAG,GAExCC,EAAY,IAAI9G,MAAM+G,mBAAoBrE,MAAO,WACrDoE,EAAUE,aAAc,EACxBF,EAAUG,QAAU,GACpBH,EAAUI,WAAY,EAEtB5H,KAAK6H,KAAO,IAAInH,MAAMoH,KAAMR,EAAUE,GACtCxH,KAAK6H,KAAK/E,SAASC,GAAKC,KAAKC,GAAG,IAChCjD,KAAK6H,KAAK/E,SAASgD,EAAI9C,KAAKC,GAAG,IAC/BjD,KAAK6H,KAAKjF,SAASC,IAAI,GAAI,IAAK,GAChC7C,KAAK6H,KAAKE,eAAgB,EAC1B/H,KAAK6H,KAAKzJ,KAAO,SACjBwG,UAAQoD,KAAKhI,KAAK6H,MAElB,IAAII,EAAQ,IAAIvH,MAAMoH,KAAMR,EAAUE,GACtCS,EAAMC,MAAMrF,IAAI,IAAM,IAAM,KAC5BoF,EAAMrF,SAASC,IAAI,GAAI,EAAG,GAC1BoF,EAAMrE,YAAa,EACnB5D,KAAK6H,KAAKlF,IAAIsF,GAEdjI,KAAK4G,YAAc,IAAIlG,MAAMyH,UAAW,SAAU,GAAI,KACtDnI,KAAK4G,YAAYhE,SAASC,IAAK,KAAM,IAAK,GAC1C7C,KAAK4G,YAAYC,SAAU,EAC3B7G,KAAK4G,YAAYhD,YAAa,EAC9B/D,YAAUY,MAAMkC,IAAI3C,KAAK4G,aACzB5G,KAAK8G,OAAS,IAAIpG,MAAM0H,aAAcpI,KAAK4G,YAAY/C,OAAOjD,QAC9DZ,KAAK8G,OAAOD,SAAU,EACtBhH,YAAUY,MAAMkC,IAAK3C,KAAK8G,QAE1BjH,YAAUY,MAAMkC,IAAK3C,KAAK6H,kBAQ9BlB,+VC7CJhC,EAAAlH,EAAA,GACA4J,EAAA5J,EAAA,OA0CI4K,EAAO,oLArCHrI,KAAKsI,QAAQC,SAASC,IAAMxI,KAAKyI,WAAW,GAC5CzI,KAAKsI,QAAQzB,SAAU,EACvB7G,KAAKsI,QAAQ1F,SAASC,KAAK,GAAI,GAAI,wCAInC7C,KAAKyI,cACLzI,KAAK0I,cACL1I,KAAK2I,YAEL,IAAK,IAAI9K,EAAI,EAAGA,EAAI,GAAIA,IAEVmC,KAAKyI,WAAW5K,GAAzBA,EAAI,GAA0B,IAAI6C,MAAMkI,eAAgBC,KAAM,gDAAkDhL,EAAG,SAAgC,IAAI6C,MAAMkI,eAAgBC,KAAM,iDAAmDhL,EAAG,QAEhOmC,KAAK0I,WAAW7K,GAAzBA,EAAI,GAA0B,IAAI6C,MAAMkI,eAAgBC,KAAM,gDAAkDhL,EAAG,SAAgC,IAAI6C,MAAMkI,eAAgBC,KAAM,iDAAmDhL,EAAG,QAE9O,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAEVmC,KAAK2I,SAAS9K,GAAvBA,EAAI,GAAwB,IAAI6C,MAAMkI,eAAgBC,KAAM,yCAA2ChL,EAAG,SAA8B,IAAI6C,MAAMkI,eAAgBC,KAAM,0CAA4ChL,EAAG,2CAK5NmC,KAAK8I,aAEL,IAAIC,EAAc,IAAIrI,MAAMsI,gBAAgBR,IAAKxI,KAAKyI,WAAW,GAAIrF,MAAO,WAC5EpD,KAAKsI,QAAU,IAAI5H,MAAMuI,OAAOF,GAChC/I,KAAKsI,QAAQ1F,SAASC,KAAK,GAAI,GAAI,GACnC7C,KAAKsI,QAAQJ,MAAMrF,IAAI,EAAG,EAAG,GAC7B7C,KAAKsI,QAAQlK,KAAO,SACpBwG,UAAQoD,KAAKhI,KAAKsI,SAElBzI,YAAUY,MAAMkC,IAAI3C,KAAKsI,qBAQ7BD,4VC9CJ1D,EAAAlH,EAAA,GACA4J,EAAA5J,EAAA,OAoDIyL,EAAM,iLA/CFlJ,KAAKmJ,eACL,IAAK,IAAItL,EAAI,EAAGA,EAAI,GAAIA,IAEVmC,KAAKmJ,YAAYtL,GAA1BA,EAAI,GAA2B,IAAI6C,MAAMkI,eAAgBC,KAAM,yCAA2ChL,EAAG,SAAiC,IAAI6C,MAAMkI,eAAgBC,KAAM,0CAA4ChL,EAAG,gDAKlOmC,KAAKoJ,OAAOxG,SAASC,KAAK,GAAI,EAAG,GACjC7C,KAAKqJ,SAAS,GAAGzG,SAASC,IAAqC,KAAzB7C,KAAKoJ,OAAOxG,SAASG,EAA5B,IAAwC,GAAQ,IAAM,GACrF/C,KAAKqJ,SAAS,GAAGzG,SAASC,IAAqC,KAAzB7C,KAAKoJ,OAAOxG,SAASG,EAA5B,IAAwC,EAAE,KAAM,IAAM,GACrF/C,KAAKsJ,SAASzC,SAAU,oCAIxB7G,KAAK8I,aACL9I,KAAKoJ,OAAS,IAAI1I,MAAMuI,OAAQ,IAAIvI,MAAMsI,gBACtCR,KAAK,IAAI9H,MAAMkI,eAAgBC,KAAM,wBACrCzF,MAAO,YACXpD,KAAKoJ,OAAOxG,SAASC,KAAK,GAAI,EAAG,GACjC7C,KAAKoJ,OAAOlB,MAAMrF,IAAI,EAAG,EAAG,GAE5B7C,KAAKqJ,YAEL,IAAK,IAAIxL,EAAI,EAAGA,EAAI,EAAGA,IACnBmC,KAAKqJ,SAASxL,GAAK,IAAI6C,MAAMuI,OAAQ,IAAIvI,MAAMsI,gBAC3CR,KAAK,IAAI9H,MAAMkI,eAAgBC,KAAM,2BACrCzF,MAAO,YACXpD,KAAKqJ,SAASxL,GAAG+E,SAASC,IAAqC,KAAzB7C,KAAKoJ,OAAOxG,SAASG,EAA5B,IAAwClF,EAAE,KAAM,IAAM,GACrFmC,KAAKqJ,SAASxL,GAAGqK,MAAMrF,IAAI,IAAM,IAAM,GACvC7C,KAAKoJ,OAAOzG,IAAI3C,KAAKqJ,SAASxL,IAGlCmC,KAAKsJ,SAAW,IAAI5I,MAAMuI,OAAQ,IAAIvI,MAAMsI,gBACxCR,IAAKxI,KAAKmJ,YAAY,IACtB/F,MAAO,YACXpD,KAAKsJ,SAAS1G,SAASC,KAAK,GAAK,EAAG,GACpC7C,KAAKsJ,SAASpB,MAAMrF,IAAI,GAAK,EAAG,GAChC7C,KAAKoJ,OAAOzG,IAAI3C,KAAKsJ,UACrBtJ,KAAKsJ,SAASzC,SAAU,EACxB7G,KAAKoJ,OAAOhL,KAAO,MACnBwG,UAAQoD,KAAKhI,KAAKoJ,QAClBvJ,YAAUY,MAAMkC,IAAK3C,KAAKoJ,oBAQ9BF,6VCxDJvE,EAAAlH,EAAA,OAsBI8L,EAAQ,2KAjBD,IAAAlH,EAAArC,KAECwJ,EAAW,IAAI9I,MAAM+I,cACzB5J,YAAUe,OAAO+B,IAAK6G,GAEtBxJ,KAAK0J,MAAQ,IAAIhJ,MAAMiJ,MAAOH,IAEZ,IAAI9I,MAAMkJ,aAChBf,KAAM,kBAAmB,SAAEgB,GACnCxH,EAAKqH,MAAMI,UAAWD,GACtBxH,EAAKqH,MAAMK,SAAS,GACpB1H,EAAKqH,MAAMM,UAAW,kBAS9BT,sWCzBJU,EAAAxM,EAAA,GACAyM,EAAAzM,EAAA,GACAiH,EAAAjH,EAAA,OAwBI0M,EAAe,qLAnBX,OAAOnK,KAAKoK,UAAUzD,SAAOkB,KAAMqB,MAAIE,OAAQ,GAAK,GAAG,0CAIvD,OAAOpJ,KAAKoK,UAAUlB,MAAIE,OAAQf,OAAKC,QAAS,EAAG,qCAG7C+B,EAAMC,EAAMC,EAAOC,GAAmB,IAAZrD,EAAYsD,UAAArE,OAAA,QAAA5D,IAAAiI,UAAA,IAAAA,UAAA,GACxCC,EAAU,EAEd,GADIvD,IAAMuD,EAAU,KAChBL,EAAKzH,SAASG,EAAIwH,GAASD,EAAK1H,SAASG,EAAK2H,GAAWJ,EAAK1H,SAASG,EAAK2H,GAAWL,EAAKzH,SAASG,EAAIwH,EAAO,CAChH,GAAIpD,EAAM,OAAO,EACjB,GAAIkD,EAAKzH,SAASkD,EAAI0E,GAASF,EAAK1H,SAASkD,GAAKwE,EAAK1H,SAASkD,GAAKuE,EAAKzH,SAASkD,EAAI0E,EAAO,OAAO,EAEzG,OAAO,cAQXL,yXC7BJD,EAAAzM,EAAA,GACAkN,EAAAlN,EAAA,GACAmN,EAAAnN,EAAA,GACAkH,EAAAlH,EAAA,GACAoN,EAAApN,EAAA,GACAqN,EAAArN,EAAA,IAEA,IAAIsN,GAAW,EAmEXC,EAAgB,eA/DhB,SAAAC,iGAAclL,CAAAC,KAAAiL,GACVjL,KAAKkL,YAAc,EACnBlL,KAAKmL,aAAe,gDAGXrM,GACTnB,EA4DJoN,SA5DIA,EAAWjM,oCAKPkB,KAAKkL,aAAe,KAAIlL,KAAKkL,YAAc,GAE3ClL,KAAKmL,cAAgB,IAAMJ,IAG3B1C,OAAKC,QAAQzB,SAAU,EAEvBlJ,EAgDRoN,SAhDQA,EAAW,KACXlL,YAAUoB,gBAAiB,EAC3BsI,QAAMG,MAAM0B,QAGZrE,WAAS,KACQ,OAAbgE,IACA1C,OAAKC,QAAQ1F,SAASG,GAAK,GAC3BsF,OAAKC,QAAQC,SAASC,IAAMH,OAAKK,WAAW1I,KAAKkL,gBAGrDnE,WAAS,KACQ,OAAbgE,IACA1C,OAAKC,QAAQ1F,SAASkD,GAAK,GAC3BuC,OAAKC,QAAQC,SAASC,IAAMH,OAAKI,WAAWzI,KAAKkL,gBAGrDnE,WAAS,KACQ,OAAbgE,IACA1C,OAAKC,QAAQ1F,SAASG,GAAK,GAC3BsF,OAAKC,QAAQC,SAASC,IAAMH,OAAKK,WAAW1I,KAAKkL,gBAGrDnE,WAAS,KACQ,OAAbgE,IACA1C,OAAKC,QAAQ1F,SAASkD,GAAK,GAC3BuC,OAAKC,QAAQC,SAASC,IAAMH,OAAKI,WAAWzI,KAAKkL,gBAMrDf,eAAakB,iBAA+B,IAAbN,IAC/BpN,EAeRoN,SAfQA,GAAW,EACXlL,YAAUoB,gBAAiB,EAC3BqK,OAAKzE,SAAQ,IAKbkE,IAAU1C,OAAKC,QAAQC,SAASC,IAAMH,OAAKM,SAAS3I,KAAKmL,6BAQjEJ,aACAC,sXC9EJf,EAAAxM,EAAA,GACA8N,EAAA9N,EAAA,GACAkN,EAAAlN,EAAA,GACAmN,EAAAnN,EAAA,GACAkH,EAAAlH,EAAA,GACAqN,EAAArN,EAAA,IACAyM,EAAAzM,EAAA,GACA+N,EAAA/N,EAAA,IAEA,IAAI8I,GACAC,KAAO,IACPiF,OAAS,IACTC,WAAa,GACbC,SAAW,IACXC,SAAW,GACX9I,SAAW,GAGX+I,GAAa,EAAOC,GAAa,EACjCC,EAAQzL,SAASC,eAAe,SAChCyL,GAAa,EAiIbC,EAAe,eA7Hf,SAAAC,iGAAcnM,CAAAC,KAAAkM,GACVlM,KAAKmM,aAAe,4CAGhBhF,EAAMiF,GACPjF,EACKZ,EAAMoF,UAAY,KAClBpF,EAAMoF,SAAWpF,EAAMoF,SAAa,GAAM3I,KAAKqJ,IAAI9F,EAAMoF,SAAWpF,EAAMmF,WAAW,GAAKnF,EAAMqF,SAAYrF,EAAMC,KAAQD,EAAMmF,YAEjInF,EAAMoF,SAAWpF,EAAMoF,SAAa,GAAM3I,KAAKqJ,IAAI9F,EAAMoF,SAAWpF,EAAMmF,WAAW,GAAKnF,EAAMqF,SAAYrF,EAAMC,KAAQD,EAAMmF,WAEvIxC,MAAIE,OAAOxG,SAASG,EAAImG,MAAIE,OAAOxG,SAASG,EAAIqJ,GAAS,IAAI,EAAI7F,EAAMoF,SAAS,GAEhF,IAAK,IAAI9N,EAAI,EAAGA,EAAIqL,MAAIE,OAAOkD,SAASlG,OAAO,EAAGvI,IAC9CqL,MAAIE,OAAOkD,SAASzO,GAAG0K,SAASzF,SAAWoG,MAAIE,OAAOkD,SAASzO,GAAG0K,SAASzF,UAAY,IAAI,EAAIyD,EAAMoF,SAAS,GAC9GzC,MAAIE,OAAOkD,SAASzO,GAAG+E,SAASG,EAAoC,KAAxBmG,MAAIE,OAAOxG,SAASG,EAA3B,IAAuClF,EAAE,4CAKlFmO,GAAa,EACbnM,YAAUoB,gBAAiB,EAC3BiI,MAAIqD,gBACJlE,OAAKkE,gBACLjB,OAAKzE,SAAQ,GACbI,cAAYuF,iBAAgB,GAC5BxB,gBAAcyB,aAAY,GAE1BV,EAAMW,MAAMC,WAAa,KACzBZ,EAAMW,MAAMtJ,MAAQ,GACpB2I,EAAMW,MAAME,YAAc,GAC1Bb,EAAMW,MAAMG,SAAW,qCAIjB,IAAAxK,EAAArC,KACFkJ,MAAIE,OAAOxG,SAASG,GAAK,OACzBgJ,EAAMW,MAAMC,WAAa,MACzBZ,EAAMW,MAAMtJ,MAAQ,QACpB2I,EAAMW,MAAME,YAAc,MAC1Bb,EAAMW,MAAMG,SAAW,OACvBhN,YAAUoB,gBAAiB,EAC3BgG,cAAYuF,iBAAgB,GACvBR,IACDc,WAASC,GAAGC,KAAKC,KAAKC,WAClBC,YAAa,gBACbrO,MAAO,WAEXkN,GAAa,EACboB,WAAY,WACJ/K,EAAKgL,iBAEP,OAKVlD,eAAamD,kBACT/G,EAAMoF,UAAY,KAAOpF,EAAMoF,UAAY,MAC3C9L,YAAUoB,gBAAiB,EAC3BgG,cAAYuF,iBAAgB,GACvBR,IACDA,GAAa,EACbc,WAASC,GAAGC,KAAKC,KAAKC,WAClBC,YAAa,gBACbrO,MAAO,UAEXsO,WAAY,WACJ/K,EAAKgL,iBAEP,OAKD,OAAbtC,aACA7B,MAAIE,OAAOkD,SAAS,GAAGzF,SAAU,EAC7B7G,KAAKmM,cAAgB,KAAKnM,KAAKmM,aAAe,GAClDjD,MAAIE,OAAOkD,SAAS,GAAG/D,SAASC,IAAMU,MAAIC,YAAYnJ,KAAKmM,iBAG3DpF,WAAS,KACQ,OAAbgE,aACKe,EAIGvF,EAAMoF,UAAY,IAClB3L,KAAKuN,SAAQ,EAAO,GACjBzB,GAAa,GALpBD,GAAa,EACb7L,KAAKuN,SAAQ,GAAO,KAU3BxG,WAAS,KAAQA,WAAS,KACV,OAAbgE,aACIe,IACIvF,EAAMoF,UAAY,IAClB3L,KAAKuN,SAAQ,EAAO,GACjBzB,GAAa,GAEpBD,IACItF,EAAMoF,UAAY,IAClB3L,KAAKuN,SAAQ,GAAQ,GAClB1B,GAAa,IAK5B9E,WAAS,KACQ,OAAbgE,aACKc,EAIGtF,EAAMoF,UAAY,IAClB3L,KAAKuN,SAAQ,GAAQ,GAClB1B,GAAa,GALpBC,GAAa,EACb9L,KAAKuN,SAAQ,EAAM,iBAcnCtB,iBACA1F,kWCzJJ5B,EAAAlH,EAAA,GACA8N,EAAA9N,EAAA,GACAgH,EAAAhH,EAAA,GACAA,EAAA,OAmBI+P,EAAW,eAfX,SAAAC,iGAAe1N,CAAAC,KAAAyN,+CAKXC,sBAAsB1N,KAAK2N,QAAQtO,KAAKW,OACxCgL,gBAAc2C,UACd1B,eAAa0B,UAEZ9N,YAAUoB,eAAkBpB,YAAUqB,SAASsD,SAAW3E,YAAU2E,qBASzEgJ,iWCzBJ7I,EAAAlH,EAAA,GACA4J,EAAA5J,EAAA,GAEA,IAAImQ,IACC7K,GAAI,EAAG+C,EAAG,GAAI+H,EAAG,IACjB9K,GAAI,GAAI+C,EAAG,GAAI+H,EAAG,IAClB9K,GAAI,GAAI+C,EAAG,GAAI+H,EAAG,IAClB9K,GAAI,EAAG+C,EAAG,GAAI+H,EAAG,IACjB9K,EAAG,EAAG+C,EAAG,GAAI+H,EAAG,IAChB9K,EAAG,GAAI+C,EAAG,GAAI+H,EAAG,IA2ClBvC,EAAO,eAtCP,SAAAwC,iGAAc/N,CAAAC,KAAA8N,GACV9N,KAAKsI,qDAWDxJ,GACJ,IAAI,IAAIjB,EAAI,EAAGA,EAAI,EAAGA,IAClBmC,KAAKsI,QAAQzK,GAAGgJ,QAAU/H,iCAS9B,IAJA,IAAIiK,EAAc,IAAIrI,MAAMsI,gBACxBR,KAAK,IAAI9H,MAAMkI,eAAgBC,KAAM,0BACrCzF,MAAO,WAEHvF,EAAI,EAAGA,EAAI,EAAGA,IAElBmC,KAAKsI,QAAQzK,GAAK,IAAI6C,MAAMuI,OAAOF,GACnC/I,KAAKsI,QAAQzK,GAAG+E,SAASC,IAAI+K,EAAQ/P,GAAGkF,EAAG6K,EAAQ/P,GAAGiI,EAAG8H,EAAQ/P,GAAGgQ,GACpE7N,KAAKsI,QAAQzK,GAAGqK,MAAMrF,IAAI,EAAG,EAAG,GAChC7C,KAAKsI,QAAQzK,GAAGO,KAAO,OACvBwG,UAAQoD,KAAKhI,KAAKsI,QAAQzK,IAC1BmC,KAAKsI,QAAQzK,GAAGgJ,SAAU,EAC1BhH,YAAUY,MAAMkC,IAAI3C,KAAKsI,QAAQzK,gBAUzCyN,8RCvDJ3G,EAAAlH,EAAA,GACAwM,EAAAxM,EAAA,GACAyM,EAAAzM,EAAA,GACAiH,EAAAjH,EAAA,GACAkN,EAAAlN,EAAA,GACAsQ,EAAAtQ,EAAA,IACA4J,EAAA5J,EAAA,GACAqN,EAAArN,EAAA,IAEA+N,EAAA/N,EAAA,IAEAoN,EAAApN,EAAA,OA8BIuQ,EAAO,eA1BP,SAAAC,iGAAclO,CAAAC,KAAAiO,GAEVpO,YAAUqO,YACVrO,YAAUsO,aACVtO,YAAUuO,2DAKVlF,MAAImF,UACJhG,OAAKiG,WACL3H,SAAO4H,aACPf,WAASG,UACT1I,aAAWuJ,SACXvJ,aAAWwJ,cACXxJ,aAAWyJ,gBACXpD,OAAKzC,OACLU,QAAMV,OAENiE,WAAS6B,sBASjBzO,OAAOoC,iBAAiB,UAAW2E,cAAY2H,SAC/C1O,OAAOoC,iBAAiB,QAAS2E,cAAY4H,OAE7C3O,OAAO4O,OAASd,EAAKe,yVCjCjBjC,EAAW,gLATP9M,KAAK+M,GAAK,IAAIiC,UAAU,uBAExBhP,KAAK+M,GAAGkC,OAAS,WACbC,QAAQC,IAAI,mCASpBrC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","\nclass InitScene {\n\n    constructor() {\n\n        let viewAngle = 30, aspect = window.innerWidth / window.innerHeight, near = 1, far = 2000;\n\n        let canvas = document.getElementById('canvas');\n        canvas.setAttribute('width', window.innerWidth);\n        canvas.setAttribute('height', window.innerHeight);\n\n        //Init Scene\n        this.scene = new THREE.Scene();\n\n        //Init Camera\n        this.camera =  new THREE.PerspectiveCamera(viewAngle, aspect, near, far);\n\n        //Render\n        this.renderer = new THREE.WebGLRenderer({canvas: canvas});\n\n        this.loadComposer();\n    }\n\n    loadComposer() {\n        //COMPOSER\n        this.composerActive = false;\n        this.composer = new THREE.EffectComposer(this.renderer);\n\n        let renderPass = new THREE.RenderPass(this.scene, this.camera);\n        this.composer.addPass(renderPass);\n\n        let sepiaPass = new THREE.ShaderPass(THREE.SepiaShader);\n        this.composer.addPass(sepiaPass);\n\n        let glitchPass = new THREE.GlitchPass(0);\n        this.composer.addPass(glitchPass);\n\n\n        //custom shader pass\n        let myEffect = {\n            uniforms: {\n                \"tDiffuse\": { value: null },\n                \"amount\":   { value: 1.0 }\n            },\n            vertexShader: [\n                \"varying vec2 vUv;\",\n                \"void main() {\",\n                \"vUv = uv;\",\n                \"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n                \"}\"\n            ].join( \"\\n\" ),\n            fragmentShader: [\n                \"uniform float amount;\",\n                \"uniform sampler2D tDiffuse;\",\n                \"varying vec2 vUv;\",\n                \"void main() {\",\n                \"vec4 color = texture2D( tDiffuse, vUv );\",\n                \"vec3 c = color.rgb;\",\n                \"color.r = c.r * 1.0;\",\n                \"color.g = c.g / 1.0;\",\n                \"color.b = c.b;\",\n                \"gl_FragColor = vec4( color.rgb , color.a );\",\n                \"}\"\n            ].join( \"\\n\" )\n        }\n\n        let customPass = new THREE.ShaderPass(myEffect);\n        customPass.renderToScreen = true;\n        this.composer.addPass(customPass);\n    }\n\n    loadScene() {\n        this.scene.addEventListener(\n            'update',\n             () => {\n                this.scene.simulate(undefined, 1);\n            }\n        );\n\n        this.scene.fog = new THREE.FogExp2(0x719b4e, 0.0003); //задний фон\n\n        this.scene.add(this.camera);\n\n        this.camera.position.set(0, 30, 30);\n\n        this.camera.rotation.x = -Math.PI / 5.9;\n    }\n\n    loadRender() {\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n        this.renderer.setClearColor(this.scene.fog.color);\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMapSoft = true;\n        THREEx.WindowResize(this.renderer, this.camera);\n    }\n\n    loadLight() {\n        let light = new THREE.DirectionalLight(0xffffff);\n        light.position.set(40, 55, -15);\n\n       // light.target.position.copy(this.scene.position);\n        light.castShadow = true;\n        light.shadow.camera.left = -60;\n        light.shadow.camera.top = -60;\n        light.shadow.camera.right = 60;\n        light.shadow.camera.bottom = 60;\n        light.shadow.camera.near = 20;\n        light.shadow.camera.far = 200;\n        light.shadow.bias = -.0001;\n        light.shadow.mapSize.width = light.shadow.mapSize.height = 2048;\n\n        this.scene.add(light);\n    }\n\n    //RENDER \n    render() {\n        if (this.renderer) {\n            this.renderer.render(this.scene, this.camera);\n        }\n    }\n\n}\n\nlet initScene = new InitScene();\n\nexport {\n    initScene\n};\n\n\n\n\n\n","import {wheel} from \"../actions/animationCar\";\nimport {garage} from \"../gameObj/garage\";\nimport {initScene} from \"../initScene\";\n\nlet objects = [];\nlet raycaster = new THREE.Raycaster();\nlet mouse = new THREE.Vector2();\n\nclass Interface {\n    slider() {\n        $(document).ready(() => {\n\n            $(\".btnSlide\").click(() => {\n                $(\"#panel\").slideToggle(\"slow\");\n                $(this).toggleClass(\"active\"); return false;\n            });\n\n        });\n    }\n\n    eventListener() {\n        document.addEventListener('click', (e) => {this.clickPlayer(e)}, false);\n    }\n\n    clickPlayer(e) {\n        mouse.x = ( event.clientX / initScene.renderer.domElement.clientWidth ) * 2 - 1;\n        mouse.y = - ( event.clientY / initScene.renderer.domElement.clientHeight ) * 2 + 1;\n\n        raycaster.setFromCamera( mouse, initScene.camera );\n        let intersects = raycaster.intersectObjects(objects);\n        if (intersects.length > 0) {\n            switch (intersects[0].object.name) {\n                case (\"Albert\"):\n                    alert(\"Hello!)\");\n                    break;\n                case (\"car\"):\n                    alert(\"Get in the car\");\n                    break;\n                case (\"tree\"):\n                    alert(\"Play\");\n                    break;\n                case (\"garage\"):\n                    alert(\"Turn on the light in settings\");\n                    break;\n            }\n        }\n    }\n\n    btnListener() {\n        $(document).ready(\n            () => {\n                $(\"#labelSpeed\").text((wheel.mass).toString());\n                $(\"#btnDown\").click(() => {\n                    if (wheel.mass > 100) {\n                        wheel.mass -= 100;\n                        $(\"#labelSpeed\").text((wheel.mass).toString());\n                    }\n\n                });\n                $(\"#btnUp\").click(() => {\n                    wheel.mass += 100;\n                    $(\"#labelSpeed\").text((wheel.mass).toString());\n                });\n\n                $('#garagelight').click(function() {\n                    if (!$(this).is(':checked')) {\n                        garage.lightGarage.visible = false;\n                        garage.helper.visible = false;\n                    } else {\n                        garage.lightGarage.visible = true;\n                        garage.helper.visible = true;\n                    }\n                });\n\n            }\n        )\n    }\n}\n\nlet interface1 = new Interface();\n\nexport {\n    interface1,\n    objects\n}","let keyboard = {};\nlet keyboardList = true;\n\nclass KeyListener {\n    constructor () {\n\n    }\n\n    setKeyboardList(bool) {\n        keyboardList = bool;\n    }\n\n    keyDown(event){\n        if (keyboardList) keyboard[event.keyCode] = true;\n    }\n\n    keyUp(event){\n        if (keyboardList) keyboard[event.keyCode] = false;\n    }\n\n\n}\n\nlet keyListener = new KeyListener();\n\nexport {\n    keyboard,\n    keyListener\n}","import {initScene} from \"../initScene\";\nimport {objects} from \"../interface/interface\";\n\nclass Garage {\n\n    loadGarage() {\n\n        let geometry = new THREE.BoxGeometry( 5, 5, 6 );\n\n        let material1 = new THREE.MeshPhongMaterial( {color: 0xFFFFFF} );\n        material1.transparent = true;\n        material1.opacity = 0.9;\n        material1.depthTest = false;\n\n        this.cube = new THREE.Mesh( geometry, material1 );\n        this.cube.rotation.x = -Math.PI/5.9 ;\n        this.cube.rotation.y = Math.PI/2.1;\n        this.cube.position.set(13, 7.3, 0);\n        this.cube.receiveShadow = true;\n        this.cube.name = 'garage';\n        objects.push(this.cube);\n\n        let cube2 = new THREE.Mesh( geometry, material1 );\n        cube2.scale.set(0.25, 0.25, 0.25);\n        cube2.position.set(1, -2, 0);\n        cube2.castShadow = true; //default is false\n        this.cube.add(cube2);\n\n        this.lightGarage = new THREE.SpotLight( 0xffffff, 10, 100 );\n        this.lightGarage.position.set( 16.5, 9.5, 0 );\n        this.lightGarage.visible = false;\n        this.lightGarage.castShadow = true;\n        initScene.scene.add(this.lightGarage);\n        this.helper = new THREE.CameraHelper( this.lightGarage.shadow.camera );\n        this.helper.visible = false;\n        initScene.scene.add( this.helper );\n\n        initScene.scene.add( this.cube );\n\n    }\n}\n\nlet garage = new Garage();\n\nexport {\n    garage\n}","import {initScene} from \"../initScene\";\nimport {objects} from \"../interface/interface\";\n\nclass Unit {\n\n    startPosition() {\n        this.sprUnit.material.map = this.sprMove180[0];\n        this.sprUnit.visible = true;\n        this.sprUnit.position.set(-15, 20, 0);\n    }\n\n    loadSprite() {\n        this.sprMove180 = [];\n        this.sprMove270 = [];\n        this.sprDeath = [];\n\n        for (let i = 0; i < 26; i++) {\n            //Move Cam 180\n            (i > 9) ? this.sprMove180[i] = new THREE.TextureLoader().load( 'textures/move_cam_180/sniper_move_cam_180_000' + i +'.png' ) : this.sprMove180[i] = new THREE.TextureLoader().load( 'textures/move_cam_180/sniper_move_cam_180_0000' + i +'.png' );\n            //Move Cam 270\n            (i > 9) ? this.sprMove270[i] = new THREE.TextureLoader().load( 'textures/move_cam_270/sniper_move_cam_270_000' + i +'.png' ) : this.sprMove270[i] = new THREE.TextureLoader().load( 'textures/move_cam_270/sniper_move_cam_270_0000' + i +'.png' );\n        }\n        for (let i = 0; i < 21; i++) {\n            //Death\n            (i > 9) ? this.sprDeath[i] = new THREE.TextureLoader().load( 'textures/sniper_death/sniper_death_000' + i +'.png' ) : this.sprDeath[i] = new THREE.TextureLoader().load( 'textures/sniper_death/sniper_death_0000' + i +'.png' );\n        }\n    }\n\n    loadUnit() {\n        this.loadSprite();\n\n        let sprMaterial = new THREE.SpriteMaterial({map: this.sprMove180[0], color: 0xffffff});\n        this.sprUnit = new THREE.Sprite(sprMaterial);\n        this.sprUnit.position.set(-15, 20, 0);\n        this.sprUnit.scale.set(6, 6, 1);\n        this.sprUnit.name = \"Albert\";\n        objects.push(this.sprUnit);\n\n        initScene.scene.add(this.sprUnit);\n\n    }\n}\n\nlet unit = new Unit();\n\nexport {\n    unit\n};","import {initScene} from \"../initScene\";\nimport {objects} from \"../interface/interface\";\n\nclass Car {\n\n    loadSprite() {\n        this.spriteSmoke = [];\n        for (let i = 0; i < 21; i++) {\n            //Death\n            (i > 9) ? this.spriteSmoke[i] = new THREE.TextureLoader().load( 'textures/sniper_death/sniper_death_000' + i +'.png' ) : this.spriteSmoke[i] = new THREE.TextureLoader().load( 'textures/sniper_death/sniper_death_0000' + i +'.png' );\n        }\n    }\n\n    startPosition() {\n        this.sprCar.position.set(-10, 5, 0);\n        this.sprWheel[0].position.set(-0.23 + this.sprCar.position.x * 0.002 + 0/1.9, -0.45, 0);\n        this.sprWheel[1].position.set(-0.23 + this.sprCar.position.x * 0.002 + 1/1.9, -0.45, 0);\n        this.sprSmoke.visible = false;\n    }\n\n    loadCar() {\n        this.loadSprite()\n        this.sprCar = new THREE.Sprite( new THREE.SpriteMaterial( {\n            map: new THREE.TextureLoader().load( 'textures/car/car.png' ),\n            color: 0xffffff} ) );\n        this.sprCar.position.set(-10, 5, 0);\n        this.sprCar.scale.set(6, 2, 0);\n\n        this.sprWheel = [];\n\n        for (let i = 0; i < 2; i++ ) {\n            this.sprWheel[i] = new THREE.Sprite( new THREE.SpriteMaterial( {\n                map: new THREE.TextureLoader().load( 'textures/car/wheels.png' ),\n                color: 0xffffff } ) );\n            this.sprWheel[i].position.set(-0.23 + this.sprCar.position.x * 0.002 + i/1.9, -0.45, 0);\n            this.sprWheel[i].scale.set(0.15, 0.45, 0);\n            this.sprCar.add(this.sprWheel[i]);\n        }\n\n        this.sprSmoke = new THREE.Sprite( new THREE.SpriteMaterial( {\n            map: this.spriteSmoke[10],\n            color: 0xffffff } ) );\n        this.sprSmoke.position.set(-0.6, 0, 0);\n        this.sprSmoke.scale.set(0.5, 2, 0);\n        this.sprCar.add(this.sprSmoke);\n        this.sprSmoke.visible = false;\n        this.sprCar.name = \"car\";\n        objects.push(this.sprCar);\n        initScene.scene.add( this.sprCar );\n    }\n\n}\n\nlet car = new Car();\n\nexport {\n    car\n};","import {initScene} from \"../initScene\";\n\n\nclass Audio {\n\n    load() {\n\n        let listener = new THREE.AudioListener();\n        initScene.camera.add( listener );\n\n        this.sound = new THREE.Audio( listener );\n\n        let audioLoader = new THREE.AudioLoader();\n        audioLoader.load( 'audio/still.mp3', ( buffer ) => {\n            this.sound.setBuffer( buffer );\n            this.sound.setLoop( true );\n            this.sound.setVolume( 0.1 );\n        });\n    }\n\n}\n\nlet audio = new Audio();\n\nexport {\n    audio\n}","import {car} from \"../gameObj/car\";\nimport {unit} from \"../gameObj/unit\";\nimport {garage} from \"../gameObj/garage\";\n\nclass TriggerEnter {\n\n    enterGarageCar() {\n        return this.trigEnter(garage.cube, car.sprCar, 0.5, 1, true);\n    }\n\n    enterUnitCar() {\n        return this.trigEnter(car.sprCar, unit.sprUnit, 3, 1);\n    }\n\n    trigEnter(obj1, obj2, size1, size2, bool=false) {\n        let movePos = 0;\n        if (bool) movePos = 1.4;\n        if (obj1.position.x - size1 <= obj2.position.x  - movePos && obj2.position.x  - movePos <= obj1.position.x + size1) {\n            if (bool) return true;\n            if (obj1.position.y - size2 <= obj2.position.y && obj2.position.y <= obj1.position.y + size2) return true;\n        }\n        return false;\n    }\n\n}\n\nlet triggerEnter = new TriggerEnter();\n\nexport {\n    triggerEnter\n}","import {unit} from \"../gameObj/unit\";\nimport {keyboard} from \"./keyConf\";\nimport {triggerEnter} from \"./triggerEnter\";\nimport {initScene} from \"../initScene\";\nimport {audio} from \"../interface/audio\";\nimport {tree} from \"../gameObj/tree\";\n\nlet keyEnter = false;\n\n\nclass AnimationUnit {\n    constructor() {\n        this.currMoveSpr = 0;\n        this.currDeathSpr = 0;\n    }\n\n    setKeyEnter (value) {\n        keyEnter = value;\n    }\n\n    animate() {\n\n        if (this.currMoveSpr >= 25) this.currMoveSpr = 0;\n\n        if (this.currDeathSpr >= 20 && keyEnter) {\n            //initScene.scene.remove(unit.sprUnit);\n\n            unit.sprUnit.visible = false;\n\n            keyEnter = null;\n            initScene.composerActive = false;\n            audio.sound.play();\n        }\n\n        if (keyboard[37]) { //left\n            if (keyEnter !== null) {\n                unit.sprUnit.position.x -= 0.1;\n                unit.sprUnit.material.map = unit.sprMove270[this.currMoveSpr++];\n            }\n        }\n        if (keyboard[38]) { //up\n            if (keyEnter !== null) {\n                unit.sprUnit.position.y += 0.1;\n                unit.sprUnit.material.map = unit.sprMove180[this.currMoveSpr++];\n            }\n        }\n        if (keyboard[39]) { //right\n            if (keyEnter !== null) {\n                unit.sprUnit.position.x += 0.1;\n                unit.sprUnit.material.map = unit.sprMove270[this.currMoveSpr++];\n            }\n        }\n        if (keyboard[40]) { //down\n            if (keyEnter !== null) {\n                unit.sprUnit.position.y -= 0.1;\n                unit.sprUnit.material.map = unit.sprMove180[this.currMoveSpr++];\n            }\n        }\n\n\n\n        if (triggerEnter.enterUnitCar() && keyEnter === false) {\n            keyEnter = true;\n            initScene.composerActive = true;\n            tree.visible(true);\n        }\n\n\n\n        if (keyEnter) unit.sprUnit.material.map = unit.sprDeath[this.currDeathSpr++];\n\n    }\n}\n\nlet animationUnit = new AnimationUnit();\n\nexport {\n    keyEnter,\n    animationUnit\n}","import {car} from \"../gameObj/car\";\nimport {keyEnter, animationUnit} from \"./animationUnit\";\nimport {keyboard, keyListener} from \"./keyConf\";\nimport {triggerEnter} from \"./triggerEnter\";\nimport {initScene} from \"../initScene\";\nimport {tree} from \"../gameObj/tree\";\nimport {unit} from \"../gameObj/unit\";\nimport {servSide} from \"../serverSide\";\n\nlet wheel = {\n    mass : 100,\n    radius : 100,\n    axleRadius : 30,\n    deltaRot : 1.3,\n    dragCoff : 0.2,\n    rotation : 0,\n};\n\nlet keyboard37 = false, keyboard39 = false;\nlet blind = document.getElementById('blind');\nlet reloadGame = false;\n\nclass AnimationCar {\n\n    constructor() {\n        this.currSprSmoke = 0;\n    }\n\n    moveCar(bool, mult1) {\n        if(bool) {\n            if (wheel.deltaRot >= 0.5) {\n                wheel.deltaRot = wheel.deltaRot - ((0.5 * Math.pow(wheel.deltaRot * wheel.axleRadius,2) * wheel.dragCoff) / wheel.mass) / wheel.axleRadius;\n            }\n        } else wheel.deltaRot = wheel.deltaRot + ((0.5 * Math.pow(wheel.deltaRot * wheel.axleRadius,2) * wheel.dragCoff) / wheel.mass) / wheel.axleRadius;\n\n        car.sprCar.position.x = car.sprCar.position.x + mult1 * (1.3/6 - wheel.deltaRot/6);\n\n        for (let i = 0; i < car.sprCar.children.length-1; i++) {\n            car.sprCar.children[i].material.rotation = car.sprCar.children[i].material.rotation + (1.3/6 - wheel.deltaRot/6);\n            car.sprCar.children[i].position.x = -0.23 + car.sprCar.position.x * 0.002 + i/1.9;\n        }\n    }\n\n    endReloadGame() {\n        reloadGame = false;\n        initScene.composerActive = false;\n        car.startPosition();\n        unit.startPosition();\n        tree.visible(false);\n        keyListener.setKeyboardList(true);\n        animationUnit.setKeyEnter(false);\n\n        blind.style.paddingTop = '0%';\n        blind.style.color = '';\n        blind.style.paddingLeft = '';\n        blind.style.fontSize = '';\n\n    }\n\n    animate() {\n        if (car.sprCar.position.x >= 14.5){\n            blind.style.paddingTop = '10%';\n            blind.style.color = 'white';\n            blind.style.paddingLeft = '30%';\n            blind.style.fontSize = '10em';\n            initScene.composerActive = true;\n            keyListener.setKeyboardList(false);\n            if (!reloadGame) {\n                servSide.ws.send(JSON.stringify({\n                    commandName: 'setResultGame',\n                    value: 'false'\n                }));\n                reloadGame = true;\n                setTimeout( () => {\n                        this.endReloadGame()\n                }\n                    , 3000);\n\n            }\n        }\n\n        if (triggerEnter.enterGarageCar()) {\n            if (wheel.deltaRot <= 1.3 && wheel.deltaRot >= 1.2) {\n                initScene.composerActive = true;\n                keyListener.setKeyboardList(false);\n                if (!reloadGame) {\n                    reloadGame = true;\n                    servSide.ws.send(JSON.stringify({\n                        commandName: 'setResultGame',\n                        value: 'true'\n                    }));\n                    setTimeout( () => {\n                            this.endReloadGame()\n                        }\n                        , 3000);\n                }\n            }\n        }\n\n        if (keyEnter === null) {\n            car.sprCar.children[2].visible = true;\n            if (this.currSprSmoke >= 19 ) this.currSprSmoke = 0;\n            car.sprCar.children[2].material.map = car.spriteSmoke[this.currSprSmoke++];\n        }\n\n        if (keyboard[37]) {\n            if (keyEnter === null) {\n                if (!keyboard39) {\n                    keyboard37 = true;\n                    this.moveCar(true, -1);\n                } else {\n                    if (wheel.deltaRot <= 1.3) {\n                        this.moveCar(false, 1);\n                    } else keyboard39 = false;\n                }\n\n            }\n        }\n\n        if (!keyboard[37] && !keyboard[39]) {\n            if (keyEnter === null) {\n                if (keyboard39) {\n                    if (wheel.deltaRot <= 1.3) {\n                        this.moveCar(false, 1);\n                    } else keyboard39 = false;\n                }\n                if (keyboard37) {\n                    if (wheel.deltaRot <= 1.3) {\n                        this.moveCar(false, -1);\n                    } else keyboard37 = false;\n                }\n            }\n        }\n\n        if (keyboard[39]) {\n            if (keyEnter === null) {\n                if (!keyboard37) {\n                    keyboard39 = true;\n                    this.moveCar(true, 1);\n                } else {\n                    if (wheel.deltaRot <= 1.3) {\n                        this.moveCar(false, -1);\n                    } else keyboard37 = false;\n                }\n            }\n        }\n    }\n}\n\nlet animationCar = new AnimationCar();\n\nexport {\n    animationCar,\n    wheel\n}","import {initScene} from \"../initScene\";\nimport {animationUnit} from \"./animationUnit\";\nimport {animationCar} from \"./animationCar\";\nimport {keyboard} from \"./keyConf\";\n\n\nclass MainAnim {\n    constructor () {\n\n    }\n\n    animate() {\n        requestAnimationFrame(this.animate.bind(this));\n        animationUnit.animate();\n        animationCar.animate();\n\n        (initScene.composerActive) ? initScene.composer.render() : initScene.render();\n    }\n\n\n}\n\nlet mainAnim = new MainAnim();\n\nexport {\n    mainAnim\n}","import {initScene} from \"../initScene\";\nimport {objects} from \"../interface/interface\";\n\nlet posTree = [\n    {x: -1 ,y: 15, z: 0},\n    {x: -16 ,y: 12, z: 0},\n    {x: -10 ,y: 18, z: 0},\n    {x: -5 ,y: 10, z: 0},\n    {x: 5 ,y: 15, z: 0},\n    {x: 10 ,y: 18, z: 0},\n];\n\nclass Tree {\n\n    constructor() {\n        this.sprUnit = [];\n    }\n\n    /*randomInteger(min, max) {\n        let rand = min + Math.random() * (max - min)\n        rand = Math.round(rand);\n        return rand;\n    }*/\n\n\n\n    visible(value) {\n        for(let i = 0; i < 6; i++) {\n            this.sprUnit[i].visible = value;\n        }\n    }\n\n    load() {\n        let sprMaterial = new THREE.SpriteMaterial({\n            map: new THREE.TextureLoader().load( 'textures/tree/tree.png' ),\n            color: 0xffffff});\n\n        for(let i = 0; i < 6; i++) {\n\n            this.sprUnit[i] = new THREE.Sprite(sprMaterial);\n            this.sprUnit[i].position.set(posTree[i].x, posTree[i].y, posTree[i].z );/*this.randomInteger(-20, 20), this.randomInteger(0, 20), 0*/\n            this.sprUnit[i].scale.set(4, 4, 1);\n            this.sprUnit[i].name = \"tree\";\n            objects.push(this.sprUnit[i]);\n            this.sprUnit[i].visible = false;\n            initScene.scene.add(this.sprUnit[i]);\n        }\n\n\n    }\n}\n\nlet tree = new Tree();\n\nexport {\n    tree\n}","import {initScene} from './initScene';\nimport {car} from \"./gameObj/car\";\nimport {unit} from \"./gameObj/unit\";\nimport {garage} from \"./gameObj/garage\";\nimport {keyListener} from \"./actions/keyConf\";\nimport {mainAnim} from \"./actions/animation\";\nimport {interface1} from \"./interface/interface\";\nimport {tree} from \"./gameObj/tree\";\n\nimport {servSide} from \"./serverSide\";\n\nimport {audio} from \"./interface/audio\";\n\nclass InitClass {\n\n    constructor() {\n\n        initScene.loadScene();\n        initScene.loadRender();\n        initScene.loadLight();\n    }\n\n    initialize() {\n\n        car.loadCar();\n        unit.loadUnit();\n        garage.loadGarage();\n        mainAnim.animate();\n        interface1.slider();\n        interface1.btnListener();\n        interface1.eventListener();\n        tree.load();\n        audio.load();\n\n        servSide.webSocket();\n    }\n\n\n\n}\n\nlet init = new InitClass();\n\nwindow.addEventListener('keydown', keyListener.keyDown);\nwindow.addEventListener('keyup', keyListener.keyUp);\n\nwindow.onload = init.initialize();\n\n\n\n","\nclass ServerSide {\n\n    webSocket () {\n        this.ws = new WebSocket('ws://localhost:8000');\n\n        this.ws.onopen = () => {\n            console.log('Connection success');\n        };\n\n    }\n}\n\nlet servSide = new ServerSide();\n\nexport {\n    servSide\n}"],"sourceRoot":""}